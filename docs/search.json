{"configuration.html":{"name":"Configuration"},"Block definitions.html#/c:EMPDefines.h@T@EMPObjectBlock":{"name":"EMPObjectBlock","abstract":"<p>The EMPObjectBlock - used for completion blocks in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EMPApiClient.html\">EMPApiClient</a></code> when getting single objects</p>"},"Block definitions.html#/c:EMPDefines.h@T@EMPObjectsBlock":{"name":"EMPObjectsBlock","abstract":"<p>The EMPObjectsBlock - used for completion blocks in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EMPApiClient.html\">EMPApiClient</a></code> when getting multiple objects</p>"},"Block definitions.html#/c:EMPDefines.h@T@EMPErrorBlock":{"name":"EMPErrorBlock","abstract":"<p>The EMPErrorBlock - used for completion blocks in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EMPApiClient.html\">EMPApiClient</a></code> when getting no objects</p>"},"Categories/UIDevice(EMPBeaconSupport).html#/c:objc(cs)UIDevice(py)bluetoothEnabled":{"name":"bluetoothEnabled","abstract":"<p>Boolean to indicate wheter bluetooth is enabled or not</p>","parent_name":"UIDevice(EMPBeaconSupport)"},"Categories/UIDevice(EMPBeaconSupport).html#/c:objc(cs)UIDevice(py)hasAuthorizedLocationAlways":{"name":"hasAuthorizedLocationAlways","abstract":"<p>Boolean to indicate wheter the user has authorized <q>location usage always</q></p>","parent_name":"UIDevice(EMPBeaconSupport)"},"Categories/UIDevice(EMPBeaconSupport).html#/c:objc(cs)UIDevice(py)supportsBeacons":{"name":"supportsBeacons","abstract":"<p>Boolean to indicate wheter the device is supporting beacons</p>","parent_name":"UIDevice(EMPBeaconSupport)"},"Categories/UIDevice(EMPBeaconSupport).html":{"name":"UIDevice(EMPBeaconSupport)","abstract":"<p>This is a helper category for the UIDevice class. Use the properties in this category to determine if the phone is ready to search for beacons.</p>"},"Classes/EMPDateFormatter.html#/c:objc(cs)EMPDateFormatter(cm)dateFromString:":{"name":"+dateFromString:","abstract":"<p>Get a NSDate from a string</p>","parent_name":"EMPDateFormatter"},"Classes/EMPDateFormatter.html#/c:objc(cs)EMPDateFormatter(cm)formattedStringFromDate:":{"name":"+formattedStringFromDate:","abstract":"<p>Returns a string from a NSDate object - the string will be formatted as the [self dateFormatter]</p>","parent_name":"EMPDateFormatter"},"Classes/EMPDateFormatter.html#/c:objc(cs)EMPDateFormatter(cm)dateFormatter":{"name":"+dateFormatter","abstract":"<p>Returns a new NSDateFormatter with the Emplate API ISO8601 format</p>","parent_name":"EMPDateFormatter"},"Classes/EMPDateFormatter.html":{"name":"EMPDateFormatter","abstract":"<p>Use this little helper for parsing and formatting dates for the Emplate API</p>"},"Classes/EMPToken.html#/c:objc(cs)EMPToken(py)content":{"name":"content","abstract":"<p>The acutally token</p>","parent_name":"EMPToken"},"Classes/EMPToken.html#/c:objc(cs)EMPToken(py)expires":{"name":"expires","abstract":"<p>The date the action was created in the Emplate API</p>","parent_name":"EMPToken"},"Classes/EMPToken.html#/c:objc(cs)EMPToken(py)expired":{"name":"expired","abstract":"<p>Indicates whether the token is not expired</p>","parent_name":"EMPToken"},"Classes/EMPToken.html#/c:objc(cs)EMPToken(im)saveToken":{"name":"-saveToken","abstract":"<p>Saves the token to NSUserDefaults</p>","parent_name":"EMPToken"},"Classes/EMPToken.html#/c:objc(cs)EMPToken(cm)newTokenWithData:":{"name":"+newTokenWithData:","abstract":"<p>Creates a new token from JSON Data</p>","parent_name":"EMPToken"},"Classes/EMPToken.html#/c:objc(cs)EMPToken(cm)currentToken":{"name":"+currentToken","abstract":"<p>Returns the saved current token</p>","parent_name":"EMPToken"},"Classes/EMPShopCategory.html#/c:objc(cs)EMPShopCategory(py)shopCategoryId":{"name":"shopCategoryId","abstract":"<p>A unique id</p>","parent_name":"EMPShopCategory"},"Classes/EMPShopCategory.html#/c:objc(cs)EMPShopCategory(py)name":{"name":"name","abstract":"<p>The Shop Category name</p>","parent_name":"EMPShopCategory"},"Classes/EMPShopCategory.html#/c:objc(cs)EMPShopCategory(py)shops":{"name":"shops","abstract":"<p>An array of the Shop Category&rsquo;s shops</p>","parent_name":"EMPShopCategory"},"Classes/EMPShopCategory.html#/c:objc(cs)EMPShopCategory(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPShopCategory"},"Classes/EMPShopCategory.html#/c:objc(cs)EMPShopCategory(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPShopCategory"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)shopId":{"name":"shopId","abstract":"<p>A unique id</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)name":{"name":"name","abstract":"<p>The shop name</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)imageURLString":{"name":"imageURLString","abstract":"<p>A URL string for the shop image</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)homepageURLString":{"name":"homepageURLString","abstract":"<p>A URL string for the shop homepage</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)directionsURLString":{"name":"directionsURLString","abstract":"<p>A URL string for the shop directions image</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)hours":{"name":"hours","abstract":"<p>A string with details about the shop opening hours</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)phone":{"name":"phone","abstract":"<p>A string with shop phone number</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)descriptionText":{"name":"descriptionText","abstract":"<p>A description of the shop</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)email":{"name":"email","abstract":"<p>A string with the shop email</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)logoURLString":{"name":"logoURLString","abstract":"<p>A string with a URL to the logo</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)facebookURLString":{"name":"facebookURLString","abstract":"<p>A string with a URL to facebook</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)beacons":{"name":"beacons","abstract":"<p>An array of the shop&rsquo;s beacon</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)shopCategories":{"name":"shopCategories","abstract":"<p>The ShopCategory object(s) the beacon is assigned to</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)imageURL":{"name":"imageURL","abstract":"<p>The URL for the shop image</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)homepageURL":{"name":"homepageURL","abstract":"<p>The shop&rsquo;s homepage as URL</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)directionsURL":{"name":"directionsURL","abstract":"<p>The URL for the directions image</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)logoURL":{"name":"logoURL","abstract":"<p>A URL to the logo</p>","parent_name":"EMPShop"},"Classes/EMPShop.html#/c:objc(cs)EMPShop(py)facebookURL":{"name":"facebookURL","abstract":"<p>A URL to facebook</p>","parent_name":"EMPShop"},"Classes/EMPRedemption.html#/c:objc(cs)EMPRedemption(py)redemptionId":{"name":"redemptionId","abstract":"<p>A unique id</p>","parent_name":"EMPRedemption"},"Classes/EMPRedemption.html#/c:objc(cs)EMPRedemption(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPRedemption"},"Classes/EMPRedemption.html#/c:objc(cs)EMPRedemption(py)cost":{"name":"cost","abstract":"<p>The prize cost</p>","parent_name":"EMPRedemption"},"Classes/EMPRedemption.html#/c:objc(cs)EMPRedemption(py)title":{"name":"title","abstract":"<p>The prize title</p>","parent_name":"EMPRedemption"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)prizeId":{"name":"prizeId","abstract":"<p>A unique id</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)title":{"name":"title","abstract":"<p>The name of the prize</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)text":{"name":"text","abstract":"<p>A descriptive text about the prize</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)cost":{"name":"cost","abstract":"<p>The cost of the prize</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)active":{"name":"active","abstract":"<p>A boolean indicating whether the prize is active or not</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)imageURL":{"name":"imageURL","abstract":"<p>A URL for the prize image</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)warning":{"name":"warning","abstract":"<p>Warning when redeeming the prize</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)userCanRedeem":{"name":"userCanRedeem","abstract":"<p>Is the user able to redeem the prize at the time the prize is loaded from the API?</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)errorMessage":{"name":"errorMessage","abstract":"<p>The error message to show when the prize can&rsquo;t be redeemed</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)infoMessage":{"name":"infoMessage","abstract":"<p>The info to show for the prize if it&rsquo;s limited</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)limits":{"name":"limits","abstract":"<p>A JSON encoded array of the applied prize limits</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(py)isExclusive":{"name":"isExclusive","abstract":"<p>Is the prize limited as an exclusive prize?</p>","parent_name":"EMPPrize"},"Classes/EMPPrize.html#/c:objc(cs)EMPPrize(im)imageURLWithSize:":{"name":"-imageURLWithSize:","abstract":"<p>Get the URL for the thumbnail in a certain size.</p>","parent_name":"EMPPrize"},"Classes/EMPPostView.html#/c:objc(cs)EMPPostView(py)postViewId":{"name":"postViewId","abstract":"<p>A unique id</p>","parent_name":"EMPPostView"},"Classes/EMPPostView.html#/c:objc(cs)EMPPostView(py)guestId":{"name":"guestId","abstract":"<p>The unique id of the guest viewing the beacon</p>","parent_name":"EMPPostView"},"Classes/EMPPostView.html#/c:objc(cs)EMPPostView(py)postId":{"name":"postId","abstract":"<p>The unique id of the viewed post</p>","parent_name":"EMPPostView"},"Classes/EMPPostView.html#/c:objc(cs)EMPPostView(py)audienceId":{"name":"audienceId","abstract":"<p>The unique id of the viewed post&rsquo;s audience</p>","parent_name":"EMPPostView"},"Classes/EMPPostView.html#/c:objc(cs)EMPPostView(py)timeIn":{"name":"timeIn","abstract":"<p>The date/time when the view of the post started</p>","parent_name":"EMPPostView"},"Classes/EMPPostView.html#/c:objc(cs)EMPPostView(py)timeOut":{"name":"timeOut","abstract":"<p>The date/time when the view of the post ended</p>","parent_name":"EMPPostView"},"Classes/EMPPostPeriod.html#/c:objc(cs)EMPPostPeriod(py)postPeriodId":{"name":"postPeriodId","abstract":"<p>A unique id</p>","parent_name":"EMPPostPeriod"},"Classes/EMPPostPeriod.html#/c:objc(cs)EMPPostPeriod(py)start":{"name":"start","abstract":"<p>The start date/time of the period</p>","parent_name":"EMPPostPeriod"},"Classes/EMPPostPeriod.html#/c:objc(cs)EMPPostPeriod(py)stop":{"name":"stop","abstract":"<p>The end date/time of the period</p>","parent_name":"EMPPostPeriod"},"Classes/EMPPostPeriod.html#/c:objc(cs)EMPPostPeriod(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPPostPeriod"},"Classes/EMPPostPeriod.html#/c:objc(cs)EMPPostPeriod(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPPostPeriod"},"Classes/EMPPostPeriod.html#/c:objc(cs)EMPPostPeriod(py)active":{"name":"active","abstract":"<p>A boolean indicating whether the period is active right now</p>","parent_name":"EMPPostPeriod"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)postFieldId":{"name":"postFieldId","abstract":"<p>A unique id</p>","parent_name":"EMPPostField"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)postFieldTypeId":{"name":"postFieldTypeId","abstract":"<p>An id of the post field type</p>","parent_name":"EMPPostField"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)order":{"name":"order","abstract":"<p>The index of the postField on the post</p>","parent_name":"EMPPostField"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)content":{"name":"content","abstract":"<p>The index of the postField on the post</p>","parent_name":"EMPPostField"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPPostField"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPPostField"},"Classes/EMPPostField.html#/c:objc(cs)EMPPostField(py)posts":{"name":"posts","abstract":"<p>The post object(s) the postField is assigned to</p>","parent_name":"EMPPostField"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)postId":{"name":"postId","abstract":"<p>A unique id</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)name":{"name":"name","abstract":"<p>The name of the post</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)content":{"name":"content","abstract":"<p>An HTML string with the post content</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)thumbnailURL":{"name":"thumbnailURL","abstract":"<p>A URL for the organization image</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)periods":{"name":"periods","abstract":"<p>An array of periods where the post should be active</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)postFields":{"name":"postFields","abstract":"<p>An array of postFields of the post</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)beacons":{"name":"beacons","abstract":"<p>The beacon object(s) the post is assigned to</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)audiences":{"name":"audiences","abstract":"<p>The audience object(s) the post is assigned to</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)read":{"name":"read","abstract":"<p>A boolean indicating if a post has been read</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)saved":{"name":"saved","abstract":"<p>A boolean indicating if a post has been saved</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(py)active":{"name":"active","abstract":"<p>A boolean indicating that the post is active</p>","parent_name":"EMPPost"},"Classes/EMPPost.html#/c:objc(cs)EMPPost(im)thumbnailURLWithSize:":{"name":"-thumbnailURLWithSize:","abstract":"<p>Get the URL for the thumbnail in a certain size.</p>","parent_name":"EMPPost"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)organizationId":{"name":"organizationId","abstract":"<p>A unique id</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)name":{"name":"name","abstract":"<p>The name of the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)text":{"name":"text","abstract":"<p>A description text about the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)urlString":{"name":"urlString","abstract":"<p>A URL string to the homepage of the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)colorString":{"name":"colorString","abstract":"<p>A color string for the the primary organization color in r,g,b</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)shops":{"name":"shops","abstract":"<p>An array of all the organizations shops</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)audiences":{"name":"audiences","abstract":"<p>An array of all the organizations audiences</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)imageURLString":{"name":"imageURLString","abstract":"<p>A URL string for the organization image</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)logoURLString":{"name":"logoURLString","abstract":"<p>A URL string for the organization logo</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)latitude":{"name":"latitude","abstract":"<p>A latitude degree of the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)longitude":{"name":"longitude","abstract":"<p>A longitude degree of the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)checkinsPerWeek":{"name":"checkinsPerWeek","abstract":"<p>A number indicating how many times it should be possible to check in and create actions</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)exclusiveMax":{"name":"exclusiveMax","abstract":"<p>A number indicating how many exclusive prizes a guest can redeem in 365 days</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)prizeWarning":{"name":"prizeWarning","abstract":"<p>Warning when redeeming the prize</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)url":{"name":"url","abstract":"<p>A URL to the homepage of the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)color":{"name":"color","abstract":"<p>The organization color</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(py)coordinate":{"name":"coordinate","abstract":"<p>The location coordinate of the organization</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(im)imageURLWithSize:":{"name":"-imageURLWithSize:","abstract":"<p>Get the URL for the image in a certain size.</p>","parent_name":"EMPOrganization"},"Classes/EMPOrganization.html#/c:objc(cs)EMPOrganization(im)logoURLWithSize:":{"name":"-logoURLWithSize:","abstract":"<p>Get the URL for the logo in a certain size.</p>","parent_name":"EMPOrganization"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)guestId":{"name":"guestId","abstract":"<p>A unique id</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)balance":{"name":"balance","abstract":"<p>The guest&rsquo;s balance (how many points)</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)firstName":{"name":"firstName","abstract":"<p>The first name of the guest</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)middleName":{"name":"middleName","abstract":"<p>The middle name of the guest</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)lastName":{"name":"lastName","abstract":"<p>The last name of the guest</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)actions":{"name":"actions","abstract":"<p>The guest&rsquo;s actions</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)redemptions":{"name":"redemptions","abstract":"<p>The guest&rsquo;s redemptions</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)shops":{"name":"shops","abstract":"<p>The shops the guest subscribed to</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)posts":{"name":"posts","abstract":"<p>The posts the guest has in the Inbox</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPGuest"},"Classes/EMPGuest.html#/c:objc(cs)EMPGuest(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPGuest"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)geofenceId":{"name":"geofenceId","abstract":"<p>A unique id</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)name":{"name":"name","abstract":"<p>The name of the geofence</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)message":{"name":"message","abstract":"<p>The message string to use in geofence notifications</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)latitude":{"name":"latitude","abstract":"<p>A latitude degree of the geofence</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)longitude":{"name":"longitude","abstract":"<p>A longitude degree of the geofence</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)radius":{"name":"radius","abstract":"<p>A radius for the geofence region in meters (should not be less than 50 meter)</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)posts":{"name":"posts","abstract":"<p>An array of posts on the geofence</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)region":{"name":"region","abstract":"<p>A CLCircularRegion based on the geofence&rsquo;s latitude, longitude and radius</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)notificationMessage":{"name":"notificationMessage","abstract":"<p>The messaged used in geofence notifications</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)active":{"name":"active","abstract":"<p>A boolean indicating that the geofence is active</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)coordinate":{"name":"coordinate","abstract":"<p>The location coordinate of the geofence</p>","parent_name":"EMPGeofence"},"Classes/EMPGeofence.html#/c:objc(cs)EMPGeofence(py)activePosts":{"name":"activePosts","abstract":"<p>An array of all active posts</p>","parent_name":"EMPGeofence"},"Classes/EMPBeaconCategory.html#/c:objc(cs)EMPBeaconCategory(py)beaconCategoryId":{"name":"beaconCategoryId","abstract":"<p>A unique id</p>","parent_name":"EMPBeaconCategory"},"Classes/EMPBeaconCategory.html#/c:objc(cs)EMPBeaconCategory(py)name":{"name":"name","abstract":"<p>The name of the BeaconCategory</p>","parent_name":"EMPBeaconCategory"},"Classes/EMPBeaconCategory.html#/c:objc(cs)EMPBeaconCategory(py)beacons":{"name":"beacons","abstract":"<p>An array of beacons on the BeaconCategory</p>","parent_name":"EMPBeaconCategory"},"Classes/EMPBeaconCategory.html#/c:objc(cs)EMPBeaconCategory(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPBeaconCategory"},"Classes/EMPBeaconCategory.html#/c:objc(cs)EMPBeaconCategory(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPBeaconCategory"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)beaconId":{"name":"beaconId","abstract":"<p>A unique id</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)name":{"name":"name","abstract":"<p>The name of the beacon</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)uuidString":{"name":"uuidString","abstract":"<p>The iBeacon UUID (string)</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)major":{"name":"major","abstract":"<p>The iBeacon major number</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)minor":{"name":"minor","abstract":"<p>The iBeacon minor number</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)message":{"name":"message","abstract":"<p>The message string to use in beacon notifications</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)latitude":{"name":"latitude","abstract":"<p>A latitude degree of the beacon</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)longitude":{"name":"longitude","abstract":"<p>A longitude degree of the beacon</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)posts":{"name":"posts","abstract":"<p>An array of posts on the beacon</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)shops":{"name":"shops","abstract":"<p>The Shop object(s) the beacon is assigned to","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)beaconCategories":{"name":"beaconCategories","abstract":"<p>The BeaconCategory object(s) the beacon is assigned to","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)uuid":{"name":"uuid","abstract":"<p>The iBeacon UUID based on the uuidString</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)beaconRegion":{"name":"beaconRegion","abstract":"<p>A CLBeaconRegion based on the beacon&rsquo;s uuid, major and minor</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)notificationMessage":{"name":"notificationMessage","abstract":"<p>The messaged used in beacon notifications</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)active":{"name":"active","abstract":"<p>A boolean indicating that the beacon is active</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)coordinate":{"name":"coordinate","abstract":"<p>The location coordinate of the beacon</p>","parent_name":"EMPBeacon"},"Classes/EMPBeacon.html#/c:objc(cs)EMPBeacon(py)activePosts":{"name":"activePosts","abstract":"<p>An array of all active posts</p>","parent_name":"EMPBeacon"},"Classes/EMPAudience.html#/c:objc(cs)EMPAudience(py)audienceId":{"name":"audienceId","abstract":"<p>A unique id</p>","parent_name":"EMPAudience"},"Classes/EMPAudience.html#/c:objc(cs)EMPAudience(py)name":{"name":"name","abstract":"<p>The name of the audience</p>","parent_name":"EMPAudience"},"Classes/EMPAudience.html#/c:objc(cs)EMPAudience(py)posts":{"name":"posts","abstract":"<p>An array of posts on the audience</p>","parent_name":"EMPAudience"},"Classes/EMPAudience.html#/c:objc(cs)EMPAudience(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPAudience"},"Classes/EMPAudience.html#/c:objc(cs)EMPAudience(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPAudience"},"Classes/EMPAction.html#/c:objc(cs)EMPAction(py)actionId":{"name":"actionId","abstract":"<p>A unique id</p>","parent_name":"EMPAction"},"Classes/EMPAction.html#/c:objc(cs)EMPAction(py)actionType":{"name":"actionType","abstract":"<p>The type of the action</p>","parent_name":"EMPAction"},"Classes/EMPAction.html#/c:objc(cs)EMPAction(py)name":{"name":"name","abstract":"<p>The name of the action</p>","parent_name":"EMPAction"},"Classes/EMPAction.html#/c:objc(cs)EMPAction(py)value":{"name":"value","abstract":"<p>The value of the action</p>","parent_name":"EMPAction"},"Classes/EMPAction.html#/c:objc(cs)EMPAction(py)createdAt":{"name":"createdAt","abstract":"<p>Date of creation in the Emplate API</p>","parent_name":"EMPAction"},"Classes/EMPAction.html#/c:objc(cs)EMPAction(py)updatedAt":{"name":"updatedAt","abstract":"<p>Date of last update in the Emplate API</p>","parent_name":"EMPAction"},"Classes/EMPAction.html":{"name":"EMPAction","abstract":"<p>This is the EMPAction model.</p>"},"Classes/EMPAudience.html":{"name":"EMPAudience","abstract":"<p>This is the EMPAudience Model</p>"},"Classes/EMPBeacon.html":{"name":"EMPBeacon","abstract":"<p>This is the EMPBeacon Model. The EMPBeacon objects contains information about the physical beacons, and can have EMPPost objects assigned in the posts array.</p>"},"Classes/EMPBeaconCategory.html":{"name":"EMPBeaconCategory","abstract":"<p>This is the BeaconCategory model. A BeaconCategory can have multiple beacons assigned.</p>"},"Classes/EMPGeofence.html":{"name":"EMPGeofence","abstract":"<p>This is the EMPGeofence Model. The EMPGeofence objects contains information about geofences created in the Emplate API."},"Classes/EMPGuest.html":{"name":"EMPGuest","abstract":"<p>This is the EMPGuest Model. The EMPGuest objects contains only the unique id for the guest. See EMPAnalyticsManager for more details about EMPGuest.</p>"},"Classes/EMPOrganization.html":{"name":"EMPOrganization","abstract":"<p>This is the EMPOrganization Model.</p>"},"Classes/EMPPost.html":{"name":"EMPPost","abstract":"<p>This is the EMPPost model. EMPPost objects contains the details for the post created in the Emplate Control Panel. EMPPost objects can also be assigned to EMPBeacon objects.</p>"},"Classes/EMPPostField.html":{"name":"EMPPostField","abstract":"<p>A PostField is the actual content of the Post. A post consist of one or more post fields. Post fields can be different types like text, image, video, coupon etc.</p>"},"Classes/EMPPostPeriod.html":{"name":"EMPPostPeriod","abstract":"<p>This is the EMPPostPeriod Model.</p>"},"Classes/EMPPostView.html":{"name":"EMPPostView","abstract":"<p>This is the EMPPostView Model. This model is used to track analytics when users are viewing EMPPost objects.</p>"},"Classes/EMPPrize.html":{"name":"EMPPrize","abstract":"<p>This is the EMPPrize model.</p>"},"Classes/EMPRedemption.html":{"name":"EMPRedemption","abstract":"<p>This is the EMPRedemptions model.</p>"},"Classes/EMPShop.html":{"name":"EMPShop","abstract":"<p>This is the EMPShop Model.</p>"},"Classes/EMPShopCategory.html":{"name":"EMPShopCategory","abstract":"<p>This is the EMPShopCategory Model. The EMPShopCategory objects contains information about categories of shops from the Emplate API.</p>"},"Classes/EMPToken.html":{"name":"EMPToken","abstract":"<p>This is the EMPToken model.</p>"},"Classes/EMPSubscriptionManager.html#/c:objc(cs)EMPSubscriptionManager(im)isShopSubscribedTo:":{"name":"-isShopSubscribedTo:","abstract":"<p>Is the user subscribed to a shop</p>","parent_name":"EMPSubscriptionManager"},"Classes/EMPSubscriptionManager.html#/c:objc(cs)EMPSubscriptionManager(im)subscribeToShop:":{"name":"-subscribeToShop:","abstract":"<p>Subscribe the user to a shop</p>","parent_name":"EMPSubscriptionManager"},"Classes/EMPSubscriptionManager.html#/c:objc(cs)EMPSubscriptionManager(im)unsubscribeFromShop:":{"name":"-unsubscribeFromShop:","abstract":"<p>Unsubscribe the user from a shop</p>","parent_name":"EMPSubscriptionManager"},"Classes/EMPSubscriptionManager.html#/c:objc(cs)EMPSubscriptionManager(im)toggleSubscriptionForShop:":{"name":"-toggleSubscriptionForShop:","abstract":"<p>Toggle the subscription for a shop</p>","parent_name":"EMPSubscriptionManager"},"Classes/EMPSubscriptionManager.html#/c:objc(cs)EMPSubscriptionManager(im)syncSubscriptions":{"name":"-syncSubscriptions","abstract":"<p>Sync the subscriptions with the API.</p>","parent_name":"EMPSubscriptionManager"},"Classes/EMPSubscriptionManager.html#/c:objc(cs)EMPSubscriptionManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>The shared instance of the EMPSubscriptionManager</p>","parent_name":"EMPSubscriptionManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(py)allPosts":{"name":"allPosts","abstract":"<p>An array of all saved posts</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(py)activePosts":{"name":"activePosts","abstract":"<p>An array of all active posts</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(py)savedPosts":{"name":"savedPosts","abstract":"<p>An array of all saved posts</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(py)activeSavedPosts":{"name":"activeSavedPosts","abstract":"<p>An array of all active saved posts</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(py)numberOfUnreadPosts":{"name":"numberOfUnreadPosts","abstract":"<p>The number of unread posts</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)isPostAdded:":{"name":"-isPostAdded:","abstract":"<p>Is the post added to the Inbox?</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)isPostSaved:":{"name":"-isPostSaved:","abstract":"<p>Is the post saved in the Inbox?</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)removeAllPosts":{"name":"-removeAllPosts","abstract":"<p>Remove all posts from the inbox</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)removeAllInactivePosts":{"name":"-removeAllInactivePosts","abstract":"<p>Remove all inactive posts</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)addPost:":{"name":"-addPost:","abstract":"<p>Add a post to the inbox</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)removePost:":{"name":"-removePost:","abstract":"<p>Remove a post from the inbox</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)markPost:asRead:":{"name":"-markPost:asRead:","abstract":"<p>Marks a post as either read or unread depending on the read parameter</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(im)markPost:asSaved:":{"name":"-markPost:asSaved:","abstract":"<p>Marks a post as either saved or unsaved depending on the saved parameter</p>","parent_name":"EMPInboxManager"},"Classes/EMPInboxManager.html#/c:objc(cs)EMPInboxManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>The shared instance of the InboxManager</p>","parent_name":"EMPInboxManager"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerClosestBeaconChangedTo:":{"name":"-beaconManagerClosestBeaconChangedTo:","abstract":"<p>Is called every time the closest beacon change to a new beacon</p>","parent_name":"EMPBeaconManagerDelegate"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerDidRangeActiveBeacons:":{"name":"-beaconManagerDidRangeActiveBeacons:","abstract":"<p>Is called every time the BeaconManager is receiving information about the nearby beacons</p>","parent_name":"EMPBeaconManagerDelegate"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerDidRangeBeacons:":{"name":"-beaconManagerDidRangeBeacons:","abstract":"<p>Is called every time the BeaconManager is receiving information about the nearby beacons</p>","parent_name":"EMPBeaconManagerDelegate"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerDidEnterRegionWithBeacon:":{"name":"-beaconManagerDidEnterRegionWithBeacon:","abstract":"<p>Is called when the device is entering a new beacon region</p>","parent_name":"EMPBeaconManagerDelegate"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerDidExitRegionWithBeacon:":{"name":"-beaconManagerDidExitRegionWithBeacon:","abstract":"<p>Is called when the device has left a beacon region</p>","parent_name":"EMPBeaconManagerDelegate"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerDidChangeAuthorizationStatus:":{"name":"-beaconManagerDidChangeAuthorizationStatus:","abstract":"<p>Is called every time the location authorization status is changed</p>","parent_name":"EMPBeaconManagerDelegate"},"Protocols/EMPBeaconManagerDelegate.html#/c:objc(pl)EMPBeaconManagerDelegate(im)beaconManagerDidChangeBluetoothState:":{"name":"-beaconManagerDidChangeBluetoothState:","abstract":"<p>Is called every time the bluetooth state is changed</p>","parent_name":"EMPBeaconManagerDelegate"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(py)closestBeacon":{"name":"closestBeacon","abstract":"<p>The closest beacon</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(py)bluetoothState":{"name":"bluetoothState","abstract":"<p>The current bluetooth state</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(py)locationAuthorizationStatus":{"name":"locationAuthorizationStatus","abstract":"<p>The current authorization status for the location</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(im)startSearchingForBeacons:":{"name":"-startSearchingForBeacons:","abstract":"<p>Start searching for an array of EMPBeacons</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(im)stopSearchingForBeacons":{"name":"-stopSearchingForBeacons","abstract":"<p>Stop searching for all beacons</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(im)startSearchingForBeacon:":{"name":"-startSearchingForBeacon:","abstract":"<p>Start searching for a single beacon</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(im)stopSearchingForBeacon:":{"name":"-stopSearchingForBeacon:","abstract":"<p>Stop searching for a single beacon</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(im)requestLocationAlwaysAuthorization":{"name":"-requestLocationAlwaysAuthorization","abstract":"<p>Request the user for permissions to use the location in background</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(im)requestPermissionsForNotifications":{"name":"-requestPermissionsForNotifications","abstract":"<p>Request the user for permissions to send local notifications</p>","parent_name":"EMPBeaconManager"},"Classes/EMPBeaconManager.html#/c:objc(cs)EMPBeaconManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>The shared instance of the BeaconManager</p>","parent_name":"EMPBeaconManager"},"Classes/EMPApiClient.html#/c:objc(cs)EMPApiClient(cm)sharedClient":{"name":"+sharedClient","abstract":"<p>The shared instance of EMPApiClient</p>","parent_name":"EMPApiClient"},"Classes/EMPAnalyticsManager.html#/c:objc(cs)EMPAnalyticsManager(im)startPostViewOfPost:audience:":{"name":"-startPostViewOfPost:audience:","abstract":"<p>Start a new PostView (with audienceId)</p>","parent_name":"EMPAnalyticsManager"},"Classes/EMPAnalyticsManager.html#/c:objc(cs)EMPAnalyticsManager(im)finishPostViewOfPost:audience:":{"name":"-finishPostViewOfPost:audience:","abstract":"<p>Finish an existing (with audience)</p>","parent_name":"EMPAnalyticsManager"},"Classes/EMPAnalyticsManager.html#/c:objc(cs)EMPAnalyticsManager(im)startPostViewOfPost:":{"name":"-startPostViewOfPost:","abstract":"<p>Start a new PostView</p>","parent_name":"EMPAnalyticsManager"},"Classes/EMPAnalyticsManager.html#/c:objc(cs)EMPAnalyticsManager(im)finishPostViewOfPost:":{"name":"-finishPostViewOfPost:","abstract":"<p>Finish an existing PostView</p>","parent_name":"EMPAnalyticsManager"},"Classes/EMPAnalyticsManager.html#/c:objc(cs)EMPAnalyticsManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>The shared instance of the AnalyticsService</p>","parent_name":"EMPAnalyticsManager"},"Classes/EMPAnalyticsManager.html":{"name":"EMPAnalyticsManager","abstract":"<p>This is the EMPAnalyticsManager class. This class is used to track data about the user of the app.</p>"},"Classes/EMPApiClient.html":{"name":"EMPApiClient","abstract":"<p>The <code>EMPApiClient</code> is used for getting and sending data to/from the Emplate API.</p>"},"Classes/EMPBeaconManager.html":{"name":"EMPBeaconManager","abstract":"<p>This is the EMPBeaconManager class, and is used to handle everything related to searching for beacons. Use the startSearchingForBeacons: to start the search of an array of EMPBeacon objects. Use the EMPBeaconManagerDelegate to get informed when the closest beacon is chaning to a new, or when the phone is entering or exiting an EMPBeacon objects region.</p>"},"Protocols/EMPBeaconManagerDelegate.html":{"name":"EMPBeaconManagerDelegate","abstract":"<p>This is the EMPBeaconManagerDelegate</p>"},"Classes/EMPInboxManager.html":{"name":"EMPInboxManager","abstract":"<p>This is the EMPInboxManager which is used to built an inbox of EMPPost objects in the app. EMPPost objects in the EMPInboxManager can be marked as read/unread. As default all posts are marked as unread when added to the inbox.</p>"},"Managers.html#/c:objc(cs)EMPLoginManager":{"name":"EMPLoginManager","abstract":"<p>The <code>EMPLoginManager</code> is used to sign up and in to the Emplate API.</p>"},"Classes/EMPSubscriptionManager.html":{"name":"EMPSubscriptionManager","abstract":"<p>This is the EMPSubscriptionManager which is used to subscribe the user to one or more EMPShop objects.</p>"},"Managers.html":{"name":"Managers"},"Models.html":{"name":"Models"},"Helpers.html":{"name":"Helpers"},"Categories.html":{"name":"Categories"},"Block definitions.html":{"name":"Block definitions"},"Other Guides.html":{"name":"Other Guides","abstract":"<p>The following guides are available globally.</p>"}}